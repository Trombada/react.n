import org.springframework.web.bind.annotation.*;

import java.util.ArrayList;
import java.util.List;

@RestController
@RequestMapping("/auth")
public class AuthController {
    
    private List<Usuario> usuarios = new ArrayList<>();

    @PostMapping("/login")
    public String login(@RequestBody Usuario usuario) {
        for (Usuario u : usuarios) {
            if (u.getEmail().equals(usuario.getEmail()) && u.getSenha().equals(usuario.getSenha())) {
                return "Login realizado com sucesso!";
            }
        }
        return "Login falhou!";
    }
    
    @PostMapping("/cadastro")
    public String cadastro(@RequestBody Usuario usuario) {
        usuarios.add(usuario);
        return "UsuÃ¡rio cadastrado!";
    }
}

class Usuario {
    private String nome;
    private String email;
    private String senha;

    public String getEmail() { return email; }
    public String getSenha() { return senha; }
}
import React, { useState } from 'react';
import { View, Text, TextInput, Button } from 'react-native';
import axios from 'axios';

const LoginScreen = ({ navigation }) => {
    const [email, setEmail] = useState('');
    const [senha, setSenha] = useState('');

    const handleLogin = async () => {
        try {
            const response = await axios.post('http://localhost:8080/auth/login', { email, senha });
            alert(response.data);
            if (response.data === "Login realizado com sucesso!") {
                navigation.navigate('Home');
            }
        } catch (error) {
            alert('Erro ao conectar!');
        }
    };

    return (
        <View>
            <Text>Login</Text>
            <TextInput placeholder="Email" onChangeText={setEmail} />
            <TextInput placeholder="Senha" secureTextEntry={true} onChangeText={setSenha} />
            <Button title="Entrar" onPress={handleLogin} />
